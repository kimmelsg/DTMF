{"version":3,"sources":["DTMF.js","styles.js","Dialpad.js","App.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","DTMF","audioContext","this","TONE_LENGTH","AudioContext","prototype","createOscillator","_a","frequency","_b","type","oscillator","playTone","lowFrequency","highFrequency","_this","stop","gainNode","createGain","gain","oscillatorLow","connect","destination","oscillatorHigh","start","setTimeout","playKey","key","String","play","disconnect","close","default","Pad","styled","div","_templateObject","Button","button","_templateObject2","Subtext","_templateObject3","NUMBER_PAD","DialPad","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","number","e","preventDefault","player","target","onClick","blur","_this2","react_default","a","createElement","map","_ref","_ref2","slicedToArray","subtext","name","React","Component","App","className","Dialpad","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2f0d7b5.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DTMF = /** @class */ (function() {\n  function DTMF(audioContext) {\n    this.TONE_LENGTH = 150;\n    this.audioContext = audioContext || new AudioContext();\n  }\n  DTMF.prototype.createOscillator = function(_a) {\n    var frequency = _a.frequency,\n      _b = _a.type,\n      type = _b === void 0 ? \"sine\" : _b;\n    var oscillator = this.audioContext.createOscillator();\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n    return oscillator;\n  };\n  DTMF.prototype.playTone = function(lowFrequency, highFrequency) {\n    var _this = this;\n    this.stop();\n    var output,\n      input = 0;\n    var gainNode = this.audioContext.createGain();\n    gainNode.gain.value = 0.1;\n    this.oscillatorLow = this.createOscillator({ frequency: lowFrequency });\n    this.oscillatorLow.connect(\n      gainNode,\n      0,\n      0\n    );\n    gainNode.connect(this.audioContext.destination);\n    this.oscillatorHigh = this.createOscillator({ frequency: highFrequency });\n    this.oscillatorHigh.connect(gainNode);\n    gainNode.connect(this.audioContext.destination);\n    this.oscillatorLow.start(0);\n    this.oscillatorHigh.start(0);\n    setTimeout(function() {\n      _this.oscillatorLow && _this.oscillatorLow.stop();\n      _this.oscillatorHigh && _this.oscillatorHigh.stop();\n    }, this.TONE_LENGTH);\n  };\n  DTMF.prototype.playKey = function(key) {\n    switch (String(key)) {\n      case \"1\":\n        this.playTone(697, 1209);\n        break;\n      case \"2\":\n        this.playTone(697, 1336);\n        break;\n      case \"3\":\n        this.playTone(697, 1477);\n        break;\n      case \"4\":\n        this.playTone(770, 1209);\n        break;\n      case \"5\":\n        this.playTone(770, 1336);\n        break;\n      case \"6\":\n        this.playTone(770, 1477);\n        break;\n      case \"7\":\n        this.playTone(852, 1209);\n        break;\n      case \"8\":\n        this.playTone(852, 1336);\n        break;\n      case \"9\":\n        this.playTone(852, 1477);\n        break;\n      case \"*\":\n        this.playTone(941, 1209);\n        break;\n      case \"0\":\n        this.playTone(941, 1336);\n        break;\n      case \"#\":\n        this.playTone(941, 1477);\n        break;\n    }\n  };\n  DTMF.prototype.play = function(key) {\n    this.playKey(key);\n  };\n  DTMF.prototype.stop = function() {\n    if (this.oscillatorLow) {\n      this.oscillatorLow.disconnect();\n    }\n    if (this.oscillatorHigh) {\n      this.oscillatorHigh.disconnect();\n    }\n  };\n  DTMF.prototype.close = function() {\n    if (this.audioContext) {\n      this.audioContext.close();\n    }\n  };\n  return DTMF;\n})();\nexports.default = DTMF;\n\n","import styled from \"styled-components\";\n\nexport const Pad = styled.div`\n  background-color: #fff;\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-row-gap: 4px;\n  grid-column-gap: 4px;\n  max-width: 180px;\n`;\n\nexport const Button = styled.button`\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: none;\n  line-height: normal;\n  font-size: 22px;\n  margin: 0;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.4s ease-in;\n  &:before {\n    content: \"\";\n    background-color: #c0c0c0;\n    border-radius: 10%;\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transform: scale(0.001, 0.001);\n  }\n  &:focus {\n    outline: 0;\n    color: #2f3941;\n    &:before {\n      animation: press_effect 0.8s ease-out;\n    }\n  }\n`;\n\nexport const Subtext = styled.div`\n  color: #737373;\n  margin-top: 2px;\n  font-size: 8px;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\nimport DTMF from \"./DTMF\";\n\nconst NUMBER_PAD = [\n  [1, \"\"],\n  [2, \"ABC\"],\n  [3, \"DEF\"],\n  [4, \"GHI\"],\n  [5, \"JKL\"],\n  [6, \"MNO\"],\n  [7, \"PQRS\"],\n  [8, \"TUV\"],\n  [9, \"WXYZ\"],\n  [\"*\", \"\"],\n  [0, \"\"],\n  [\"#\", \"\"]\n];\n\nclass DialPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.player = new DTMF();\n  }\n\n  handleClick = number => e => {\n    e.preventDefault();\n    this.player.play(number);\n    let target = e.target;\n    this.props.onClick(number);\n    setTimeout(() => target.blur(), 300);\n  };\n\n  render() {\n    return (\n      <S.Pad>\n        {NUMBER_PAD.map(([number, subtext]) => (\n          <S.Button\n            key={number}\n            onClick={this.handleClick(number)}\n            name={number}\n          >\n            {number}\n            <S.Subtext>{subtext || \" \"}</S.Subtext>\n          </S.Button>\n        ))}\n      </S.Pad>\n    );\n  }\n}\n\nexport default DialPad;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dialpad from \"./Dialpad\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Dialpad onClick={() => null} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}